# Demo usage of script
load$ 0,98304 # 1.5 in fixed point
load$ 1,10 # We want the number to be displayed at tileaddr 10-18
load 2,&getbackhere
jmp 0,&printnum
getbackhere: jmp 0,&getbackhere

# Save number to gr0, tileaddr to gr1 and return addr to gr1 before running

# GR usage:
# 0-Loop Counter
# 1-Or map
# 2-tileaddr
# 3-number to display
# 4-6 Unused
# 7-Loop counter to move numbers


# Load input data
printnum: store 0,&number
store 1,&startat
store 2,&returnaddr

# Setup
load$ 0,8 #loop counter
load$ 1,4026531840 #or-map
load 2,&startat # Tile addr

# Run for all 8 hex digits
while 0>$1
    load 3,&number # Set gr3 to &number

    # Filter out current nibble
    store 1,&bitmap
    and 3,&bitmap
    lsr$ 1,4 # Move bitmap

    # Move resulting number over to end of gr3
    store 0,&loopvar1
    load 7,&loopvar1
    while 7>$2
        lsr$ 3,4
        sub$ 7,1
    end while

    # Store final number to display
    storep~ 3,&startat

    # Prepare next loop
    sub$ 0,1
    add$ 2,1
    store 2,&startat

    # Place a + sign where the decimal point is
    if 0=$4
        load$ 3,43 #plus sign
        storep~ 3,&startat
        add$ 2,1
        store 2,&startat
    end if
end while


# Display /FFFF
load$ 3,46 # /
storep~ 3,&startat
add$ 2,1
store 2,&startat


# FFFF
load$ 0,1 #loop counter #TODO: Does while run the correct amount of times!?
while 0<$4
    load$ 3,15 # F
    storep~ 3,&startat
    add$ 2,1
    store 2,&startat
    add$ 0,1
end while

# Jump to return adress specified by caller
jmp 0,&returnaddr
number: sli 0
bitmap: sli 0
loopvar1: sli 0
loopvar2: sli 0
startat: sli 40 # Where to start placing numbers
returnaddr: sli 0
#end: jmp 0,&returnaddr
